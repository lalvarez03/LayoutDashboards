import { InjectionToken, inject } from '@angular/core';
const defaultOptions = {
    dir: 'ltr',
    direction: 'horizontal',
    disabled: false,
    gutterDblClickDuration: 0,
    gutterSize: 11,
    gutterStep: 1,
    gutterClickDeltaPx: 2,
    restrictMove: false,
    unit: 'percent',
    useTransition: false,
};
export const ANGULAR_SPLIT_DEFAULT_OPTIONS = new InjectionToken('angular-split-global-config', { providedIn: 'root', factory: () => defaultOptions });
/**
 * Provides default options for angular split. The options object has hierarchical inheritance
 * which means only the declared properties will be overridden
 */
export function provideAngularSplitOptions(options) {
    return {
        provide: ANGULAR_SPLIT_DEFAULT_OPTIONS,
        useFactory: () => ({
            ...inject(ANGULAR_SPLIT_DEFAULT_OPTIONS, { skipSelf: true }),
            ...options,
        }),
    };
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYW5ndWxhci1zcGxpdC1jb25maWcudG9rZW4uanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9wcm9qZWN0cy9hbmd1bGFyLXNwbGl0L3NyYy9saWIvYW5ndWxhci1zcGxpdC1jb25maWcudG9rZW4udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLGNBQWMsRUFBWSxNQUFNLEVBQUUsTUFBTSxlQUFlLENBQUE7QUFnQmhFLE1BQU0sY0FBYyxHQUErQjtJQUNqRCxHQUFHLEVBQUUsS0FBSztJQUNWLFNBQVMsRUFBRSxZQUFZO0lBQ3ZCLFFBQVEsRUFBRSxLQUFLO0lBQ2Ysc0JBQXNCLEVBQUUsQ0FBQztJQUN6QixVQUFVLEVBQUUsRUFBRTtJQUNkLFVBQVUsRUFBRSxDQUFDO0lBQ2Isa0JBQWtCLEVBQUUsQ0FBQztJQUNyQixZQUFZLEVBQUUsS0FBSztJQUNuQixJQUFJLEVBQUUsU0FBUztJQUNmLGFBQWEsRUFBRSxLQUFLO0NBQ3JCLENBQUE7QUFFRCxNQUFNLENBQUMsTUFBTSw2QkFBNkIsR0FBRyxJQUFJLGNBQWMsQ0FDN0QsNkJBQTZCLEVBQzdCLEVBQUUsVUFBVSxFQUFFLE1BQU0sRUFBRSxPQUFPLEVBQUUsR0FBRyxFQUFFLENBQUMsY0FBYyxFQUFFLENBQ3RELENBQUE7QUFFRDs7O0dBR0c7QUFDSCxNQUFNLFVBQVUsMEJBQTBCLENBQUMsT0FBNEM7SUFDckYsT0FBTztRQUNMLE9BQU8sRUFBRSw2QkFBNkI7UUFDdEMsVUFBVSxFQUFFLEdBQStCLEVBQUUsQ0FBQyxDQUFDO1lBQzdDLEdBQUcsTUFBTSxDQUFDLDZCQUE2QixFQUFFLEVBQUUsUUFBUSxFQUFFLElBQUksRUFBRSxDQUFDO1lBQzVELEdBQUcsT0FBTztTQUNYLENBQUM7S0FDSCxDQUFBO0FBQ0gsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGlvblRva2VuLCBQcm92aWRlciwgaW5qZWN0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSdcbmltcG9ydCB7IFNwbGl0RGlyLCBTcGxpdERpcmVjdGlvbiwgU3BsaXRVbml0IH0gZnJvbSAnLi9tb2RlbHMnXG5cbmV4cG9ydCBpbnRlcmZhY2UgQW5ndWxhclNwbGl0RGVmYXVsdE9wdGlvbnMge1xuICBkaXI6IFNwbGl0RGlyXG4gIGRpcmVjdGlvbjogU3BsaXREaXJlY3Rpb25cbiAgZGlzYWJsZWQ6IGJvb2xlYW5cbiAgZ3V0dGVyRGJsQ2xpY2tEdXJhdGlvbjogbnVtYmVyXG4gIGd1dHRlclNpemU6IG51bWJlclxuICBndXR0ZXJTdGVwOiBudW1iZXJcbiAgZ3V0dGVyQ2xpY2tEZWx0YVB4OiBudW1iZXJcbiAgcmVzdHJpY3RNb3ZlOiBib29sZWFuXG4gIHVuaXQ6IFNwbGl0VW5pdFxuICB1c2VUcmFuc2l0aW9uOiBib29sZWFuXG59XG5cbmNvbnN0IGRlZmF1bHRPcHRpb25zOiBBbmd1bGFyU3BsaXREZWZhdWx0T3B0aW9ucyA9IHtcbiAgZGlyOiAnbHRyJyxcbiAgZGlyZWN0aW9uOiAnaG9yaXpvbnRhbCcsXG4gIGRpc2FibGVkOiBmYWxzZSxcbiAgZ3V0dGVyRGJsQ2xpY2tEdXJhdGlvbjogMCxcbiAgZ3V0dGVyU2l6ZTogMTEsXG4gIGd1dHRlclN0ZXA6IDEsXG4gIGd1dHRlckNsaWNrRGVsdGFQeDogMixcbiAgcmVzdHJpY3RNb3ZlOiBmYWxzZSxcbiAgdW5pdDogJ3BlcmNlbnQnLFxuICB1c2VUcmFuc2l0aW9uOiBmYWxzZSxcbn1cblxuZXhwb3J0IGNvbnN0IEFOR1VMQVJfU1BMSVRfREVGQVVMVF9PUFRJT05TID0gbmV3IEluamVjdGlvblRva2VuPEFuZ3VsYXJTcGxpdERlZmF1bHRPcHRpb25zPihcbiAgJ2FuZ3VsYXItc3BsaXQtZ2xvYmFsLWNvbmZpZycsXG4gIHsgcHJvdmlkZWRJbjogJ3Jvb3QnLCBmYWN0b3J5OiAoKSA9PiBkZWZhdWx0T3B0aW9ucyB9LFxuKVxuXG4vKipcbiAqIFByb3ZpZGVzIGRlZmF1bHQgb3B0aW9ucyBmb3IgYW5ndWxhciBzcGxpdC4gVGhlIG9wdGlvbnMgb2JqZWN0IGhhcyBoaWVyYXJjaGljYWwgaW5oZXJpdGFuY2VcbiAqIHdoaWNoIG1lYW5zIG9ubHkgdGhlIGRlY2xhcmVkIHByb3BlcnRpZXMgd2lsbCBiZSBvdmVycmlkZGVuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBwcm92aWRlQW5ndWxhclNwbGl0T3B0aW9ucyhvcHRpb25zOiBQYXJ0aWFsPEFuZ3VsYXJTcGxpdERlZmF1bHRPcHRpb25zPik6IFByb3ZpZGVyIHtcbiAgcmV0dXJuIHtcbiAgICBwcm92aWRlOiBBTkdVTEFSX1NQTElUX0RFRkFVTFRfT1BUSU9OUyxcbiAgICB1c2VGYWN0b3J5OiAoKTogQW5ndWxhclNwbGl0RGVmYXVsdE9wdGlvbnMgPT4gKHtcbiAgICAgIC4uLmluamVjdChBTkdVTEFSX1NQTElUX0RFRkFVTFRfT1BUSU9OUywgeyBza2lwU2VsZjogdHJ1ZSB9KSxcbiAgICAgIC4uLm9wdGlvbnMsXG4gICAgfSksXG4gIH1cbn1cbiJdfQ==