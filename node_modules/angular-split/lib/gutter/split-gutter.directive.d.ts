import { ElementRef, TemplateRef } from '@angular/core';
import { SplitAreaComponent } from '../split-area/split-area.component';
import * as i0 from "@angular/core";
export interface SplitGutterTemplateContext {
    /**
     * The area before the gutter.
     * In RTL the right area and in LTR the left area
     */
    areaBefore: SplitAreaComponent;
    /**
     * The area after the gutter.
     * In RTL the left area and in LTR the right area
     */
    areaAfter: SplitAreaComponent;
    /**
     * The absolute number of the gutter based on direction (RTL and LTR).
     * First gutter is 1, second is 2, etc...
     */
    gutterNum: number;
    /**
     * Whether this is the first gutter.
     * In RTL the most right area and in LTR the most left area
     */
    first: boolean;
    /**
     * Whether this is the last gutter.
     * In RTL the most left area and in LTR the most right area
     */
    last: boolean;
    /**
     * Whether the gutter is being dragged now
     */
    isDragged: boolean;
}
export declare class SplitGutterDirective {
    template: TemplateRef<SplitGutterTemplateContext>;
    /**
     * The map holds reference to the drag handle elements inside instances
     * of the provided template.
     */
    gutterToHandleElementMap: Map<number, ElementRef<HTMLElement>[]>;
    /**
     * The map holds reference to the excluded drag elements inside instances
     * of the provided template.
     */
    gutterToExcludeDragElementMap: Map<number, ElementRef<HTMLElement>[]>;
    constructor(template: TemplateRef<SplitGutterTemplateContext>);
    canStartDragging(originElement: HTMLElement, gutterNum: number): boolean;
    addToMap(map: Map<number, ElementRef<HTMLElement>[]>, gutterNum: number, elementRef: ElementRef<HTMLElement>): void;
    removedFromMap(map: Map<number, ElementRef<HTMLElement>[]>, gutterNum: number, elementRef: ElementRef<HTMLElement>): void;
    static ngTemplateContextGuard(dir: SplitGutterDirective, ctx: unknown): ctx is SplitGutterTemplateContext;
    static ɵfac: i0.ɵɵFactoryDeclaration<SplitGutterDirective, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<SplitGutterDirective, "[asSplitGutter]", never, {}, {}, never, never, true, never>;
}
