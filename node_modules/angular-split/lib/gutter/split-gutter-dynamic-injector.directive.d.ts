import { Injector, ViewContainerRef, TemplateRef } from '@angular/core';
import * as i0 from "@angular/core";
interface SplitGutterDynamicInjectorTemplateContext {
    $implicit: Injector;
}
/**
 * This directive allows creating a dynamic injector inside ngFor
 * with dynamic gutter num and expose the injector for ngTemplateOutlet usage
 */
export declare class SplitGutterDynamicInjectorDirective {
    private vcr;
    private templateRef;
    set gutterNum(value: number);
    constructor(vcr: ViewContainerRef, templateRef: TemplateRef<SplitGutterDynamicInjectorTemplateContext>);
    static ngTemplateContextGuard(dir: SplitGutterDynamicInjectorDirective, ctx: unknown): ctx is SplitGutterDynamicInjectorTemplateContext;
    static ɵfac: i0.ɵɵFactoryDeclaration<SplitGutterDynamicInjectorDirective, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<SplitGutterDynamicInjectorDirective, "[asSplitGutterDynamicInjector]", never, { "gutterNum": { "alias": "asSplitGutterDynamicInjector"; "required": false; }; }, {}, never, never, true, never>;
}
export {};
